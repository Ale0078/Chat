<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:views="clr-namespace:Chat.Client.View"
                    xmlns:viewModels="clr-namespace:Chat.Client.ViewModel"
                    xmlns:selectors="clr-namespace:Chat.Client.TemplateSelectors"
                    xmlns:controls="clr-namespace:Chat.Controls;assembly=Chat.Controls"
                    xmlns:extensions="clr-namespace:Chat.Client.AttachedProperties"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <DataTemplate x:Key="ChatLastMessageTemplate" DataType="{x:Type viewModels:ChatMemberViewModel}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:ChatMemberViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="You: "
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:ChatMemberViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Grid.Column="0"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.ByteFile, Converter={StaticResource IsArrayNullOrEmpty}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:ChatMemberViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="You: Photo "
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.ByteFile, Converter={StaticResource IsArrayNullOrEmpty}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:ChatMemberViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="Photo "
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding Draft.Message, Converter={StaticResource IsNull}}" Value="False">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:ChatMemberViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="Draft: "
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableDraft}"/>

                                            <TextBlock Text="{Binding Draft.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="True"/>
                                <Condition Binding="{Binding Draft.Message, Converter={StaticResource IsNull}}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsTyping}" Value="True">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Is typing"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <views:AnimatedType/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="GroupLastMessageTemplate" DataType="{x:Type viewModels:GroupViewModel}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:GroupViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="You: "
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:GroupViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="{Binding LastMessage.LastMessageSender.User.Name, StringFormat={}{0}:}"
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <TextBlock Text=" "
                                                       Grid.Column="1"/>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Grid.Column="2"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.ByteFile, Converter={StaticResource IsArrayNullOrEmpty}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:GroupViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="You: Photo "
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.ByteFile, Converter={StaticResource IsArrayNullOrEmpty}}" Value="False"/>
                                <Condition Binding="{Binding LastMessage.IsFromCurrentUser}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:GroupViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="{Binding LastMessage.LastMessageSender.Name, StringFormat={}{0}: Photo}"
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableNameUser}"/>

                                            <TextBlock Text=" "
                                                       Grid.Column="1"/>

                                            <TextBlock Text="{Binding LastMessage.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="2"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding Draft.Message, Converter={StaticResource IsNull}}" Value="False">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:GroupViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition extensions:FrameworkElementExtension.ActualWidth="0"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="Draft: "
                                                       Grid.Column="0"
                                                       Style="{StaticResource TextBlockCuttableDraft}"/>

                                            <TextBlock Text="{Binding Draft.Message}"
                                                       Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}, Path=(extensions:FrameworkElementExtension.ActualWidth)}"
                                                       Grid.Column="1"
                                                       Style="{StaticResource TextBlockCuttableLightText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LastMessage.Message, Converter={StaticResource IsNull}}" Value="True"/>
                                <Condition Binding="{Binding Draft.Message, Converter={StaticResource IsNull}}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <selectors:ListOfUsersSelector x:Key="LastMessageUserGroupSelector"
                                   UserTemplate="{StaticResource ChatLastMessageTemplate}"
                                   GroupTemplate="{StaticResource GroupLastMessageTemplate}"/>
    
    <DataTemplate x:Key="UsersTemplate" DataType="{x:Type viewModels:ChatMemberViewModel}">
        <Grid Style="{StaticResource GridToMembersFromList}"
              x:Name="Field">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Style="{StaticResource GridEllipsePhoto}"
                  Grid.Column="0"
                  Grid.Row="0"
                  Grid.RowSpan="2">
                <Ellipse Style="{StaticResource EllipseStrokePhoto}">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Photo, Converter={StaticResource ConvertBytesToPhoto}}"
                                    Stretch="UniformToFill"/>
                    </Ellipse.Fill>
                </Ellipse>

                <Ellipse Style="{StaticResource EllipseStatusUserFromList}"/>
            </Grid>

            <Grid Grid.Column="1"
                  Grid.ColumnSpan="2"
                  Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Style="{StaticResource TextBlockMemberNameFromList}"
                           Grid.Column="0"
                           Grid.Row="0"
                           Text="{Binding Name}"/>

                <views:LastMessageTimeUserControl DataContext="{Binding}"
                                                  Grid.Row="0"
                                                  Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Right"
                                                  Margin="0, 0, 5, 0"/>
            </Grid>

            <ContentControl Content="{Binding}"
                            ContentTemplateSelector="{StaticResource LastMessageUserGroupSelector}"
                            Grid.Column="1"
                            Grid.Row="1"
                            HorizontalAlignment="Left"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GroupsTemplate" DataType="{x:Type viewModels:GroupViewModel}">
        <Grid Style="{StaticResource GridToMembersFromList}"
              x:Name="Field">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Style="{StaticResource GridEllipsePhoto}"
                  Grid.Column="0"
                  Grid.Row="0"
                  Grid.RowSpan="2">
                <Ellipse Style="{StaticResource EllipseStrokePhoto}">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Photo, Converter={StaticResource ConvertBytesToPhoto}}"
                                    Stretch="UniformToFill"/>
                    </Ellipse.Fill>
                </Ellipse>
            </Grid>

            <Grid Grid.Column="1"
                  Grid.ColumnSpan="2"
                  Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <materialDesign:PackIcon Kind="AccountGroup" 
                                         VerticalAlignment="Bottom"
                                         Margin="0, 0, 3, 4"
                                         Grid.Column="0"/>

                <TextBlock Style="{StaticResource TextBlockMemberNameFromList}"
                           Text="{Binding Name}"
                           Grid.Column="1"/>

                <views:LastMessageTimeUserControl DataContext="{Binding}"
                                                  Grid.Column="2"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Right"
                                                  Margin="0, 0, 5, 0"/>
            </Grid>
            
            <ContentControl Content="{Binding}"
                            ContentTemplateSelector="{StaticResource LastMessageUserGroupSelector}"
                            Grid.Column="1"
                            Grid.Row="1"
                            HorizontalAlignment="Left"/>
        </Grid>
    </DataTemplate>

    <selectors:ListOfUsersSelector UserTemplate="{StaticResource UsersTemplate}"
                                   GroupTemplate="{StaticResource GroupsTemplate}"
                                   x:Key="UsersTemplateSeloctor"/>

    <DataTemplate x:Key="UserOnlineStatusTempale" DataType="{x:Type viewModels:ChatMemberViewModel}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLogin}" Value="True">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="Is Online"
                                                   Style="{StaticResource TextBlockUserIsOnline}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsLogin}" Value="False">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <controls:TimeBlock TimeToCountdown="{Binding DisconnectTime, UpdateSourceTrigger=PropertyChanged}"
                                                            DoesStartTimer="True"
                                                            Style="{StaticResource TextBlockUserIsDisconnected}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsTyping}" Value="True">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Is typing"
                                                       Style="{StaticResource TextBlockUserIsOnline}"/>

                                            <views:AnimatedType Padding="0, 4, 0, 0"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="GroupMembersAmoutTemplate" DataType="{x:Type viewModels:GroupViewModel}">
        <TextBlock Text="{Binding Users.Count, StringFormat={}{0} members}"
                   Style="{StaticResource TextBlockUserIsDisconnected}"/>
    </DataTemplate>

    <selectors:ListOfUsersSelector x:Key="UserOnlineStatusAndGroupMembersAmountSelector"
                                   UserTemplate="{StaticResource UserOnlineStatusTempale}"
                                   GroupTemplate="{StaticResource GroupMembersAmoutTemplate}"/>

    <DataTemplate x:Key="UserToAddToGroupTemplate" DataType="{x:Type viewModels:ChatMemberViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.Background>
                <SolidColorBrush Color="White"
                                 x:Name="UserBackground"/>
            </Grid.Background>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseUp">
                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=views:GroupCreaterUserControl, Mode=FindAncestor}, Path=DataContext.User.GroupCreater.AddUserToGroupMembers}"
                                           CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <Ellipse Width="50"
                     Height="50"
                     Margin="15, 0, 5, 5"
                     Grid.Column="0">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding Photo, Converter={StaticResource ConvertBytesToPhoto}}"
                                                Stretch="UniformToFill"/>
                </Ellipse.Fill>
            </Ellipse>

            <Grid Grid.Column="1"
                  Margin="0, 0, 15, 5">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Text="{Binding Name}"
                           FontSize="16"
                           VerticalAlignment="Center"
                           Grid.Row="0"/>

                <ContentControl Content="{Binding}"
                                VerticalAlignment="Center"
                                Grid.Row="1">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLogin}" Value="True">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock Text="Is Online"
                                                           Style="{StaticResource TextBlockUserIsOnline}"/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsLogin}" Value="False">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <controls:TimeBlock TimeToCountdown="{Binding DisconnectTime, UpdateSourceTrigger=PropertyChanged}"
                                                                    DoesStartTimer="True"
                                                                    Style="{StaticResource TextBlockUserIsDisconnected}"/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Grid>

            <Grid.Triggers>
                <EventTrigger RoutedEvent="{x:Static Grid.MouseEnterEvent}">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="UserBackground"
                                            Storyboard.TargetProperty="Color"
                                            Duration="0:0:0.2"
                                            From="White"
                                            To="#605CB0FF"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="{x:Static Grid.MouseLeaveEvent}">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="UserBackground"
                                            Storyboard.TargetProperty="Color"
                                            Duration="0:0:0.2"
                                            From="#605CB0FF"
                                            To="White"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GroupToAddToGroupTemplate"/>

    <selectors:ListOfUsersSelector x:Key="GroupAddingMembersTemplate"
                                   UserTemplate="{StaticResource UserToAddToGroupTemplate}"
                                   GroupTemplate="{StaticResource GroupToAddToGroupTemplate}"/>

    <DataTemplate x:Key="MessagesTemplate" DataType="{x:Type viewModels:ChatMessageViewModel}">
        <Border Style="{StaticResource BorderUserMessageTemplate}"
                Focusable="False"
                x:Name="ChatSource">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit"
                                  Command="{Binding EditMessage}"
                                  CommandParameter="{StaticResource True}"
                                  Visibility="{Binding IsFromCurrentUser, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <StackPanel Orientation="Vertical"
                            Grid.Row="0">
                    <Image Source="{Binding ByteFile, Converter={StaticResource ConvertBytesToPhoto}}"
                           Stretch="Uniform"
                           MaxHeight="200"
                           MaxWidth="300"/>

                    <TextBlock Grid.Row="0"
                               TextWrapping="Wrap"
                               FontWeight="Light"
                               FontSize="16"
                               Height="Auto"
                               Text="{Binding Message}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                            Grid.Row="1"
                            Width="Auto">
                    <TextBlock Text="edited "
                               Style="{StaticResource TextBlockSendingtimeMessageWhite}"
                               Visibility="{Binding IsEdit, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>

                    <TextBlock Text="{Binding SendingTime, StringFormat={}{0:t}}"
                               Style="{StaticResource TextBlockSendingtimeMessageWhite}"/>
                </StackPanel>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="DefaultGroupMessageTemplate" DataType="{x:Type viewModels:GroupMessageViewModel}">
        <Border Style="{StaticResource BorderGroupMessageTemplate}"
                Focusable="False"
                x:Name="ChatSource">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit"
                                  Command="{Binding EditMessage}"
                                  CommandParameter="{StaticResource True}"
                                  Visibility="{Binding IsFromCurrentUser, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <StackPanel Orientation="Vertical"
                            Grid.Row="0">
                    <Image Source="{Binding ByteFile, Converter={StaticResource ConvertBytesToPhoto}}"
                           Stretch="Uniform"
                           MaxHeight="200"
                           MaxWidth="300"/>

                    <TextBlock Grid.Row="0"
                               TextWrapping="Wrap"
                               FontWeight="Light"
                               FontSize="16"
                               Height="Auto"
                               Text="{Binding Message}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                            Grid.Row="1"
                            Width="Auto">
                    <TextBlock Text="edited "
                               Style="{StaticResource TextBlockSendingtimeMessageGroupMessage}"
                               Visibility="{Binding IsEdit, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>

                    <TextBlock Text="{Binding SendingTime, StringFormat={}{0:t}}"
                               Style="{StaticResource TextBlockSendingtimeMessageGroupMessage}"/>
                </StackPanel>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="CurrentClientLasGroupMessageTemplate" DataType="{x:Type viewModels:GroupMessageViewModel}">
        <Grid Style="{StaticResource GridCurrentUserGroupMessage}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Border Style="{StaticResource BorderLastGroupMessageTemplate}"
                    Grid.Column="0"
                    Focusable="False"
                    x:Name="ChatSource">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="6*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit"
                                      Command="{Binding EditMessage}"
                                      CommandParameter="{StaticResource True}"
                                      Visibility="{Binding IsFromCurrentUser, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>
                        </ContextMenu>
                    </Grid.ContextMenu>

                    <StackPanel Orientation="Vertical"
                                Grid.Row="0">
                        <Image Source="{Binding ByteFile, Converter={StaticResource ConvertBytesToPhoto}}"
                               Stretch="Uniform"
                               MaxHeight="200"
                               MaxWidth="300"/>

                        <TextBlock Grid.Row="0"
                                   TextWrapping="Wrap"
                                   FontWeight="Light"
                                   FontSize="16"
                                   Height="Auto"
                                   Text="{Binding Message}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"
                                Grid.Row="1"
                                Width="Auto">
                        <TextBlock Text="edited "
                                   Style="{StaticResource TextBlockSendingtimeMessageWhite}"
                                   Visibility="{Binding IsEdit, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>

                        <TextBlock Text="{Binding SendingTime, StringFormat={}{0:t}}"
                                   Style="{StaticResource TextBlockSendingtimeMessageWhite}"/>
                    </StackPanel>
                </Grid>
            </Border>

            <Path Grid.Column="1"
                  Style="{StaticResource PathCornerTriangleToGroupMessageFromCurrentUser}"
                  Data="M -1,10 V 0 C -1,0 1,9 10,10 H 0"/>

            <Ellipse Style="{StaticResource EllipseUserPhotoToGroupMessage}"
                     Grid.Column="2">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding LastMessageSender.User.Photo, Converter={StaticResource ConvertBytesToPhoto}}"
                                Stretch="UniformToFill"/>
                </Ellipse.Fill>
            </Ellipse>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="OtherLasGroupMessageTemplate" DataType="{x:Type viewModels:GroupMessageViewModel}">
        <Grid Style="{StaticResource GridOtherUsersGroupMessage}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Ellipse Style="{StaticResource EllipseUserPhotoToGroupMessage}"
                     Grid.Column="0">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding LastMessageSender.User.Photo, Converter={StaticResource ConvertBytesToPhoto}}"
                                Stretch="UniformToFill"/>
                </Ellipse.Fill>
            </Ellipse>

            <Path Grid.Column="1"
                  Style="{StaticResource PathCornerTriangleToGroupMessageFromOthers}"
                  Data="M 0,10 H 10 V 0 C 10,0 9,9 0,10"/>

            <Border Style="{StaticResource BorderLastGroupMessageTemplate}"
                    Grid.Column="2"
                    Focusable="False"
                    x:Name="ChatSource">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="6*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit"
                                      Command="{Binding EditMessage}"
                                      CommandParameter="{StaticResource True}"
                                      Visibility="{Binding IsFromCurrentUser, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>
                        </ContextMenu>
                    </Grid.ContextMenu>

                    <StackPanel Orientation="Vertical"
                                Grid.Row="0">
                        <Image Source="{Binding ByteFile, Converter={StaticResource ConvertBytesToPhoto}}"
                               Stretch="Uniform"
                               MaxHeight="200"
                               MaxWidth="300"/>

                        <TextBlock Grid.Row="0"
                                   TextWrapping="Wrap"
                                   FontWeight="Light"
                                   FontSize="16"
                                   Height="Auto"
                                   Text="{Binding Message}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"
                                Grid.Row="1"
                                Width="Auto">
                        <TextBlock Text="edited "
                                   Style="{StaticResource TextBlockSendingtimeMessageGray}"
                                   Visibility="{Binding IsEdit, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>

                        <TextBlock Text="{Binding SendingTime, StringFormat={}{0:t}}"
                                   Style="{StaticResource TextBlockSendingtimeMessageGray}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GroupMessagesTemplate" DataType="{x:Type viewModels:GroupMessageViewModel}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsItLastMessageFromSender}" Value="False">
                            <Setter Property="ContentTemplate" Value="{StaticResource DefaultGroupMessageTemplate}"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsItLastMessageFromSender}" Value="True"/>
                                <Condition Binding="{Binding IsFromCurrentUser}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate" Value="{StaticResource OtherLasGroupMessageTemplate}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsItLastMessageFromSender}" Value="True"/>
                                <Condition Binding="{Binding IsFromCurrentUser}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="ContentTemplate" Value="{StaticResource CurrentClientLasGroupMessageTemplate}"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <selectors:MessageTemplateSelector MessageTemplate="{StaticResource MessagesTemplate}"
                                       GroupMessageTemplate="{StaticResource GroupMessagesTemplate}"
                                       x:Key="MessageTemplateSelector"/>
</ResourceDictionary>