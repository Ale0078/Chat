<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:extension="clr-namespace:Chat.Client.AttachedProperties"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="TextBoxSearching" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBoxBase}">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="5, 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="Searche"/>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed"/>
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="5, 2, 5, 2"/>
        <Setter Property="extension:TextBoxExtension.BorderCornerRadius" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="{TemplateBinding extension:TextBoxExtension.BorderCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            
                            <materialDesign:PackIcon Kind="Magnify"
                                                     Grid.Column="0"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     VerticalAlignment="Center"
                                                     Margin="5, 0, 0, 0"/>
                            
                            <TextBox Grid.Column="1"
                                     materialDesign:TextFieldAssist.DecorationVisibility="{TemplateBinding materialDesign:TextFieldAssist.DecorationVisibility}"
                                     materialDesign:TextFieldAssist.TextBoxViewMargin="{TemplateBinding materialDesign:TextFieldAssist.TextBoxViewMargin}"
                                     Foreground="{TemplateBinding Foreground}"
                                     TextWrapping="{TemplateBinding TextWrapping}"
                                     FontSize="{TemplateBinding FontSize}"
                                     Text="{Binding User.SearchingUser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     BorderThickness="0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxLightBlueFloatingHint" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="materialDesign:HintAssist.Foreground" Value="#40A3FF"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#40A3FF"/>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed"/>
        <Setter Property="BorderBrush" Value="#40A3FF"/>
    </Style>

    <Style x:Key="TextBoxFileCaption" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxLightBlueFloatingHint}">
        <Setter Property="Margin" Value="20, 10"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1.5"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="Caption"/>
    </Style>

    <Style x:Key="TextBoxGroupNameCraeter" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxLightBlueFloatingHint}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="190"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1.5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="Name"/>
    </Style>

    <!--<Style x:Key="TextBoxToMessageBase" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="Write a message..."/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="8, 6, 0, 0"/>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="TextBoxToMessage" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxToMessageBase}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentUser}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="True"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="True"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Sory, but you were muted by admin this chat :)"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="True"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="False"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Sory, but you were muted by admin this chat :)"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="False"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="True"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Sory, but you were added to black list :)"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="False"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="False"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="True"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Write a message..."/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>-->
</ResourceDictionary>