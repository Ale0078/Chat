<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:user="clr-namespace:Chat.Models;assembly=Chat.Models"
                    xmlns:viewModels="clr-namespace:Chat.Client.ViewModel"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:extensions="clr-namespace:Chat.Client.AttachedProperties"
                    xmlns:converters="clr-namespace:Chat.Client.Converters"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:views="clr-namespace:Chat.Client.View">
    <Style TargetType="{x:Type views:AnimatedType}">
        <Setter Property="EllipseHeight" Value="6"/>
        <Setter Property="EllipseWidth" Value="6"/>
        <Setter Property="EllipseMargin" Value="1"/>
        <Setter Property="EllipseColor" Value="#005BF7"/>
        <Setter Property="Padding" Value="0, 0, 0, 6"/>
    </Style>

    <Style x:Key="MessageTemplate" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity="0.2"
                                  Color="#5d5b5d"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFromCurrentUser}" Value="True">
                <Setter Property="Background" Value="#858cfb"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding IsFromCurrentUser}" Value="False">
                <Setter Property="Background" Value="#e772fb"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SendingTimeMessage" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>

    <DataTemplate x:Key="MessagesTemplate" DataType="{x:Type viewModels:ChatMessageViewModel}">
        <Border Style="{StaticResource MessageTemplate}"
                Focusable="False"
                x:Name="ChatSource">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit"
                                  Command="{Binding EditMessage}"
                                  CommandParameter="{StaticResource True}"
                                  Visibility="{Binding IsFromCurrentUser, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <StackPanel Orientation="Vertical"
                            Grid.Row="0">
                    <Image Source="{Binding ByteFile, Converter={StaticResource ConvertBytesToPhoto}}"
                           Stretch="Uniform"
                           MaxHeight="200"
                           MaxWidth="300"/>

                    <TextBlock Grid.Row="0"
                               TextWrapping="Wrap"
                               FontWeight="Light"
                               FontSize="16"
                               Height="Auto"
                               Text="{Binding Message}"/>
                </StackPanel>
                <!--<ContentControl Grid.Row="0"
                                Content="{Binding}">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding }"
                                    </MultiDataTrigger.Conditions>
                                    
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>-->

                <StackPanel Orientation="Horizontal"
                            Grid.Row="1"
                            Width="Auto">
                    <TextBlock Text="edited "
                               Style="{StaticResource SendingTimeMessage}"
                               Visibility="{Binding IsEdit, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>

                    <TextBlock Text="{Binding SendingTime, StringFormat={}{0:t}}"
                               Style="{StaticResource SendingTimeMessage}"/>
                </StackPanel>
                
            </Grid>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="MessagesScrolViewer" TargetType="ItemsControl">
        <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto"
                          extensions:ScrollViewerExtension.IsScrollToEnd="True">
                <ItemsPresenter Focusable="False"/>
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <Style x:Key="TextBoxToMessage" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MaxHeight" Value="100"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="Write a message..."/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="8, 6, 0, 0"/>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentUser}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="True"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="True"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Sory, but you were muted by admin this chat :)"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="True"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="False"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Sory, but you were muted by admin this chat :)"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="False"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="True"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Sory, but you were added to black list :)"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding User.IsMuted}" Value="False"/>
                    <Condition Binding="{Binding CurrentUser.IsClientBlockedByMember}" Value="False"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="IsEnabled" Value="True"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Write a message..."/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconButtonToSendMessage" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsDefault" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Focusable="{TemplateBinding Focusable}"
                          Background="Transparent">
                        <materialDesign:PackIcon Kind="Send"
                                                 Height="25"
                                                 Width="25"
                                                 Foreground="{TemplateBinding Foreground}"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 x:Name="icon"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="#2DBAEA"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderWithCurrentUserInfo" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentUser}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding CurrentUser}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="UsersTemplate" DataType="{x:Type viewModels:ChatMemberViewModel}">
        <Grid Focusable="False"
              Height="52"
              x:Name="Field">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Height="40"
                  Width="40"
                  Margin="8, 0, 8, 0"
                  Grid.Column="0"
                  Grid.Row="0"
                  Grid.RowSpan="2">
                <Ellipse Style="{StaticResource EllipseStrokePhoto}">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Photo, Converter={StaticResource ConvertBytesToPhoto}}"
                                    Stretch="UniformToFill"/>
                    </Ellipse.Fill>
                </Ellipse>

                <Ellipse Width="10"
                         Height="10"
                         Margin="10, 0, 0, 0"
                         Focusable="False"
                         VerticalAlignment="Bottom"
                         HorizontalAlignment="Right"
                         Style="{StaticResource EllipseStatusUser}"/>
            </Grid>

            <Grid Grid.Row="0"
                  Grid.Column="1"
                  x:Name="GridSize">
                <TextBlock FontSize="16"
                           FontWeight="Medium"
                           Focusable="False"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Grid.Column="1"
                           Grid.Row="0"
                           Text="{Binding Name}"/>

                <views:LastMessageTimeUserControl DataContext="{Binding}"
                                                  Grid.Row="0"
                                                  Grid.Column="2"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Right"
                                                  Margin="0, 0, 5, 0"/>
            </Grid>

            <views:LastMessageUserControl DataContext="{Binding}"
                            Grid.Column="1"
                            Grid.Row="1"
                            HorizontalAlignment="Left"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            ToolTipService.Placement="MousePoint"
                            Focusable="False">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLogin}" Value="True">
                                        <Setter Property="ToolTip" Value="Is Login"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsLogin}" Value="False">
                                        <Setter Property="ToolTip" Value="Is Disconnected"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsClientBlockedByMember}" Value="True">
                                        <Setter Property="ToolTip" Value="Is Added To Black List"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsMuted}" Value="True">
                                        <Setter Property="ToolTip" Value="Is Muted"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsBlocked}" Value="True">
                                        <Setter Property="ToolTip" Value="Is Blocked"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#7099DA00"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>