<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:user="clr-namespace:Chat.Models;assembly=Chat.Models"
                    xmlns:viewModels="clr-namespace:Chat.Client.ViewModel"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:extensions="clr-namespace:Chat.Client.AttachedProperties"
                    xmlns:converters="clr-namespace:Chat.Client.Converters"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:views="clr-namespace:Chat.Client.View">
    <Style TargetType="{x:Type views:AnimatedType}">
        <Setter Property="EllipseHeight" Value="6"/>
        <Setter Property="EllipseWidth" Value="6"/>
        <Setter Property="EllipseMargin" Value="1"/>
        <Setter Property="EllipseColor" Value="#005BF7"/>
        <Setter Property="Padding" Value="0, 0, 0, 6"/>
    </Style>

    <Style x:Key="MessageTemplate" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity="0.2"
                                  Color="#5d5b5d"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFromCurrentUser}" Value="True">
                <Setter Property="Background" Value="#858cfb"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding IsFromCurrentUser}" Value="False">
                <Setter Property="Background" Value="#e772fb"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SendingTimeMessage" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>

    <DataTemplate x:Key="MessagesTemplate" DataType="{x:Type viewModels:ChatMessageViewModel}">
        <Border Style="{StaticResource MessageTemplate}"
                Focusable="False"
                x:Name="ChatSource">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit"
                                  Command="{Binding EditMessage}"
                                  CommandParameter="{StaticResource True}"
                                  Visibility="{Binding IsFromCurrentUser, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <StackPanel Orientation="Vertical"
                            Grid.Row="0">
                    <Image Source="{Binding ByteFile, Converter={StaticResource ConvertBytesToPhoto}}"
                           Stretch="Uniform"
                           MaxHeight="200"
                           MaxWidth="300"/>

                    <TextBlock Grid.Row="0"
                               TextWrapping="Wrap"
                               FontWeight="Light"
                               FontSize="16"
                               Height="Auto"
                               Text="{Binding Message}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                            Grid.Row="1"
                            Width="Auto">
                    <TextBlock Text="edited "
                               Style="{StaticResource SendingTimeMessage}"
                               Visibility="{Binding IsEdit, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"/>

                    <TextBlock Text="{Binding SendingTime, StringFormat={}{0:t}}"
                               Style="{StaticResource SendingTimeMessage}"/>
                </StackPanel>
                
            </Grid>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="MessagesScrolViewer" TargetType="ItemsControl">
        <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto"
                          extensions:ScrollViewerExtension.IsScrollToEnd="True">
                <ItemsPresenter Focusable="False"/>
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <Style x:Key="IconButtonToSendMessage" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsDefault" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Focusable="{TemplateBinding Focusable}"
                          Background="Transparent">
                        <materialDesign:PackIcon Kind="Send"
                                                 Height="25"
                                                 Width="25"
                                                 Foreground="{TemplateBinding Foreground}"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 x:Name="icon"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="#2DBAEA"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderWithCurrentUserInfo" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentUser}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding CurrentUser}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>