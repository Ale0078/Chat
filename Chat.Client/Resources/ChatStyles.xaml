<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:user="clr-namespace:Chat.Models;assembly=Chat.Models"
                    xmlns:viewModels="clr-namespace:Chat.Client.ViewModel"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:extensions="clr-namespace:Chat.Client.AttachedProperties"
                    xmlns:selectors="clr-namespace:Chat.Client.TemplateSelectors"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="MessageTemplate" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity="0.2"
                                  Color="#5d5b5d"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFromCurrentUser}" Value="True">
                <Setter Property="Background" Value="#858cfb"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding IsFromCurrentUser}" Value="False">
                <Setter Property="Background" Value="#e772fb"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SendingTimeMessage" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>

    <DataTemplate x:Key="MessagesTemplate" DataType="{x:Type user:ChatMessageModel}">
        <Border Style="{StaticResource MessageTemplate}"
                Focusable="False">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           TextWrapping="Wrap"
                           FontWeight="Light"
                           FontSize="16"
                           Text="{Binding Message}"/>

                <TextBlock Grid.Row="1"                             
                           Text="{Binding SendingTime, StringFormat={}{0:t}}"
                           Style="{StaticResource SendingTimeMessage}"/>
            </Grid>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="MessagesScrolViewer" TargetType="ItemsControl">
        <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto"
                          extensions:ScrollViewerExtentions.IsScrollToEnd="True">
                <ItemsPresenter Focusable="False"/>
            </ScrollViewer>
        </Border>
    </ControlTemplate>
    
    <Style x:Key="TextBoxToMessage" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding CurrentUser}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding CurrentUser}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>-->

        <Setter Property="Height" Value="40"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="8, 6, 0, 0"/>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Collapsed"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding User.IsMuted}" Value="True">
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Sory, but you were muted by admin this chat :)"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding User.IsMuted}" Value="False">
                <Setter Property="IsEnabled" Value="True"/>
                <Setter Property="materialDesign:HintAssist.Hint" Value="Write a message..."/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="IconButtonToSendMessage" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Focusable="{TemplateBinding Focusable}"
                          Background="Transparent">
                        <materialDesign:PackIcon Kind="Send"
                                                 Foreground="#2DBAEA"
                                                 Height="25"
                                                 Width="25"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding CurrentUser}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding CurrentUser}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="BorderWithCurrentUserInfo" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentUser}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding CurrentUser}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="UsersTemplate" DataType="{x:Type viewModels:ChatMemberViewModel}">
        <Grid Margin="0, 10"
              Focusable="False">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Focusable="False">
                <TextBlock FontSize="24"
                           FontWeight="Light"
                           Focusable="False">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBlocked}" Value="True">
                                    <Setter Property="Text" Value="{Binding Name, StringFormat={}{0} - Blocked}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBlocked}" Value="False">
                                    <Setter Property="Text" Value="{Binding Name}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Ellipse Width="10"
                         Height="10"
                         Margin="10, 0, 0, 0"
                         Focusable="False">
                    <Ellipse.Style>
                        <Style TargetType="{x:Type Ellipse}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLogin}" Value="False">
                                    <Setter Property="Fill" Value="Red"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsLogin}" Value="True">
                                    <Setter Property="Fill" Value="Green"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Style>
                </Ellipse>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <Style x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Focusable="False">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#3e90fd"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>