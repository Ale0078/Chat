<UserControl x:Class="Chat.Client.View.MessagesUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:time="clr-namespace:Chat.Controls;assembly=Chat.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:views="clr-namespace:Chat.Client.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" 
             d:DesignWidth="800"
             x:Name="Messages">
    <Grid Grid.Column="2"
              Focusable="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Style="{StaticResource BorderWithCurrentUserInfo}"
                Height="52">
            <Grid>
                <StackPanel Margin="8, 0, 0, 0"
                            VerticalAlignment="Center"
                            Orientation="Vertical">
                    <TextBlock Text="{Binding CurrentUser.Name}"
                               FontSize="20"
                               FontWeight="Medium"/>

                    <ContentControl Content="{Binding CurrentUser}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentUser.IsLogin}" Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="Is Online"
                                                               Foreground="#005BF7"
                                                               FontSize="12"
                                                               FontWeight="Light"/>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding CurrentUser.IsLogin}" Value="False">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <time:TimeBlock TimeToCountdown="{Binding DisconnectTime, UpdateSourceTrigger=PropertyChanged}"
                                                                    DoesStartTimer="True"
                                                                    FontSize="12"
                                                                    Foreground="#747577"
                                                                    FontWeight="Light"/>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding CurrentUser.IsTyping}" Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="Is typing"
                                                                   FontSize="12"
                                                                   Foreground="#005BF7"
                                                                   FontWeight="Light"/>

                                                        <views:AnimatedType Padding="0, 4, 0, 0"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </StackPanel>

                <Menu HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      IsMainMenu="True"
                      Background="#FFFFFF"
                      Margin="0, 0, 8, 0">
                    <MenuItem Header="{materialDesign:PackIcon Kind=DotsVertical}">
                        <MenuItem Header="Block user"
                                  Icon="{materialDesign:PackIcon Kind=Cancel}"
                                  Visibility="{Binding User.IsAdmin, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"
                                  Command="{Binding BlockUser}"
                                  CommandParameter="{StaticResource True}"/>

                        <MenuItem Header="Unblock user"
                                  Icon="{materialDesign:PackIcon Kind=CheckDecagram}"
                                  Visibility="{Binding User.IsAdmin, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"
                                  Command="{Binding BlockUser}"
                                  CommandParameter="{StaticResource False}"/>

                        <MenuItem Header="Mute user"
                                  Icon="{materialDesign:PackIcon Kind=VolumeMute}"
                                  Visibility="{Binding User.IsAdmin, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"
                                  Command="{Binding MuteUser}"
                                  CommandParameter="{StaticResource True}"/>

                        <MenuItem Header="Unmute user"
                                  Icon="{materialDesign:PackIcon Kind=VolumeHigh}"
                                  Visibility="{Binding User.IsAdmin, Converter={StaticResource ConverterBoolToVisibilityCollapsed}}"
                                  Command="{Binding MuteUser}"
                                  CommandParameter="{StaticResource False}"/>

                        <MenuItem Header="Add to black list"
                                  Icon="{materialDesign:PackIcon Kind=MessageBulletedOff}"
                                  Command="{Binding SetBlackListState}"
                                  CommandParameter="{StaticResource True}"/>

                        <MenuItem Header="Remove from black list"
                                  Icon="{materialDesign:PackIcon Kind=MessageBulleted}"
                                  Command="{Binding SetBlackListState}"
                                  CommandParameter="{StaticResource False}"/>
                    </MenuItem>
                </Menu>
            </Grid>
        </Border>

        <ItemsControl Grid.ColumnSpan="2"
                      Grid.Row="1"
                      BorderThickness="0, 0, 0, 1"
                      BorderBrush="LightGray"
                      ItemsSource="{Binding CurrentUser.Messages}"
                      ItemTemplate="{StaticResource MessagesTemplate}"
                      Template="{StaticResource MessagesScrolViewer}"
                      Focusable="False"
                      Background="{StaticResource YellowGrenYellowGradient}"/>

        <ContentControl Content="{Binding CurrentUser.EditMessage}"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Grid.Row="2">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentUser.EditMessage, Converter={StaticResource IsNull}}" Value="False">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <views:EditMessageUserControl DataContext="{Binding}"
                                                                      CancelCommand="{Binding EditMessage}"
                                                                      CancelCommandParametr="{StaticResource False}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <TextBox Grid.Row="3"
                 Grid.Column="0"
                 Text="{Binding User.Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Name="Message"
                 Style="{StaticResource TextBoxToMessage}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding Typing}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="KeyUp">
                    <i:InvokeCommandAction Command="{Binding StopTyping}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <Button Grid.Row="3"
                Grid.Column="1"
                x:Name="Send"
                IsEnabled="{Binding User.IsButtonEnabled}"
                Command="{Binding SendMessage}"
                Style="{StaticResource IconButtonToSendMessage}"/>
    </Grid>
</UserControl>
